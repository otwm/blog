---
layout: post
title:  "워크 프로세스와 테스트"
comments: True
---

논의해야 할 것들은..
1. 워크 프로세스 툴   
1. 워크 프로세스(스토리 보드 등)    
1. 테스트    
1. 브랜치 사용 전략    


1. 워크 프로세스 툴   
 * 백로그를 위한 스프레드 시트는 의사소통을 위해서 필요하다. 다만 논의 이후에 계속 유지하는 것이 맞을지는 모르겠다.(아마 유지 하는 것이 맞다고 본다.)    
  * 트렐로의 장점은 개발팀이 사용하기에는 좋다. 다만, 관리적인 측면은 약하다. 리뷰와의 연계도 문제로 있다.
  * 우리 필요한것은 자동화, 시스템간 통합(슬랙 통합 등), 관리에 필요한 다양한 뷰 지원이다. 그렇지만  무료 툴에는 한계가 있고, 직접 만드는 것은 더 많은 비용이 초래된다.(또한 중복작성도 가능하면 피고하고 싶다.)
  * 유료 툴(지라+애자일 플러그인 등)은 강력하지만 유료이고, 관리적인 부분에서 굉장히 좋다. 하지만 역시 모든 것이 필요한 건 아니다.(트라이얼 버전을 써보는 것도 나쁘진 않을 것 같다.)
  * 깃 랩을 사용하는 것은 괜찮아 보이지만, 기능은 조금 부족해 보인는 하다. 실제로 쓰다보면 분명 아쉬운 부분이 생길 거라는 생각은 든다.
  * 레드마인은 문안하게 사용할 수 있지만, 역시 코드리뷰는 잘 모르겠다. 또한 칸반(트렐로)에 대한 지원이 약하다.(플러그인 형태로 지원 되지만, 쓰다보면 별로라는 걸 알게 된다..;;)
  * 리뷰보드 같은 무료 리뷰툴은 실제로 그다지 좋지 않다.(그렇지만 어쨌든 리뷰 시스템으로서 역활은 한다.) 그래서 그냥 깃랩을 쓰는 것도 괜찮다고 본다.

  ** [결론] **    
  1) 스프레트 시트 사용. 트렐로. 깃랩 사용(이슈, 리뷰)     
  => 이 경우 실제로 트렐로의 사용률은 떨어지게 될 것이고, 기능적으로 분명 아쉬운 부분이 생길 것이다. 하지만 중복 작성은 없을 것이고 아쉬운데로 필요한 기능은 다 될듯하다.        
  2) 트렐로 중심으로 사용. 리뷰도 트렐로 중심으로 사용.(원보드를 이용한다?)    
  => 카드가 너무 많아 질것 같다. 리뷰까지 관리되는 것은...글쎄? 무언가 시스템화가 안되는 것 같은 느낌?(비추)   
  3) 레드마인 사용.(git과 꼭 통합해야 할지는 모르겠다.) 리뷰보드같은 별도의 리뷰시스템 운영.   
  => 관리측면은 좋을 것 같지만, 칸반(트렐로) 지원 약함.(비추)   
  4) 유료 툴 사용 검토.(향후 팀이 커질 때를 생각해서 검토 하는 것도 좋을듯.)    
  Q 유료 툴에 대한 지원은 가능한가? 가능하면 얼마까지?   
  5) 우선은 1번으로 가면 좋겠다. 중간 중간 필요한 것은 문서로 작성하면서 이 후 자동화와 시스템 통합을 고려한다. 현재의 시스템은 언제든지 바뀔 수 있다고 생각한다. 시간이 나면 4번에 대한 검토도 생각 해볼 만 하다.
1. 워크 프로세스(스토리 보드 등)    
 * Q 요구 사항 문서나 스토리 보드 같은 것은 어떻게 되나요?
1. 테스트    
 * 리팩토링이나 애자일에서 필요한 부분이다.
 * 스펙 중심 BDD형태로 가면 좋을 것 같다. 또한 웹에 대한 테스트도 필요하다고 본다.
 * Q 스펙 기반으로 테스트를 작성할 때 테스트 커버리지를 충분히 만족하나요?
 * Q 프론트와 백엔드 전부 테스트 코드를 작성할 경우 시간적으로 충분 할까요?
 * junit, mockito, jbehave, cucumber, mocha, jasmine... 많은 프레임워크가 있다. 어떤것을 선택 하여야 할까..
1. 브랜치 사용 전략    
 * 메인 브랜치는 몇개가 좋을지? 2개 또는 3개?   
   => 1개 메인브랜치(그에 해당하는 1개의 개발 서버)   
   => 2개 디벨로프 브랜치, stage or 리얼 브랜치(그에 해당하는 2개의 개발 서버)       
   => 3개 디벨로프 브랜치, stage ,리얼 브랜치(3개의 개발서버가 필요하다.=> 운영 부담이 조금 있을 듯.)     
   => 디벨로프 브랜치(실제 메인 브랜치), stage(관리자 테스트 용),리얼 브랜치(bug fix용)    
 * 1개 또는 2개로 부터 시작하면 될듯 하다.   
 * 다수의 토픽 브랜치를 사용하고, 리뷰 또는 리팩토링 리뷰는 토픽 브랜치를 기반으로 이루어 지면 될 듯 하다.
 * 리뷰가 완료된 코드는 해당되는 브랜치에 머지되거나 리베이스 한다.
 * 트렐로에 운영된다고 볼 때, 경우에 따라 리뷰가 끝나고 디벨로프 브랜치까지 반영되었지만, 리얼 브랜치로 반영안된 경우, 이 상태는 어떻게 관리되어야 하나?(분류가 좀 더 세분화 되어야 할 필요가 있을지도..)
